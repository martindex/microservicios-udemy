version: '3'

services:
  
  mysql:
    container_name: mysql8
    image: mysql:8.0
    command: mysqld --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    ports:
      - '3306:3306'
    volumes:
      - './compose/mysql8/var/lib/mysql:/var/lib/mysql'
      - './compose/mysql8/etc/mysql/conf.d/my.cnf:/etc/mysql/conf.d/my.cnf'
      - './compose/mysql8/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d'
    environment:
      - 'MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}'
      - 'MYSQL_DATABASE=${MYSQL_DATABASE}'
      - 'MYSQL_USER=${MYSQL_USER}'
      - 'MYSQL_PASSWORD=${MYSQL_PASSWORD}'
    networks: ['stack']

  postgres:
    container_name: postgres
    hostname: postgres
    image: 'postgres:${POSTGRES_VERSION}'
    environment:
      - 'POSTGRES_USER=${POSTGRES_USER}'
      - 'POSTGRES_PASSWORD=${POSTGRES_PASSWORD}'
      - 'POSTGRES_DB=${POSTGRES_DB}'
    ports:
      - '5432:5432'
    volumes:
      - './compose/postgres/var/lib/postgresql/data/:/var/lib/postgresql/data/'
    networks: ['stack']
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  zipkin-server:
    container_name: zipkin-server
    image: ghcr.io/openzipkin/zipkin
    ports:
      - "9411:9411"
    restart: on-failure
    networks: ['stack']
    depends_on:
      - rabbitmq
        #- mysql
    environment:
      - 'RABBIT_ADDRESSES=rabbitmq:5672'
      - 'STORAGE_TYPE=mysql'
      - 'MYSQL_USER=root'
      - 'MYSQL_PASS=${MYSQL_ROOT_PASSWORD}'
      - 'MYSQL_HOST=mysql'

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.8-management-alpine
    ports:
      - "15672:15672"
      - "5672:5672"
    restart: on-failure
    networks: ['stack']

networks: {stack: {}}
